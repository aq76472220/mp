var modules=["api/user","components/topHeader","components/user/index","components/leftBar","components/footerBt","components/accountSetting","text!../views/agent.html","css!../../static/assets/css/agent.css"];define(modules,function(t,e,n,o,r,s,a){return{name:"agent",template:a,data:function(){return{settingModal:!1}},components:{user:n,topHeader:e,leftBar:o,footerBt:r,accountSetting:s},methods:{turnToPage:function(t){var e,n,o;if("string"==typeof t?e=t:(e=t.name,n=t.params,o=t.query),e.indexOf("isTurnByHref_")>-1)return void window.open(e.split("_")[1]);this.$router.push({name:e,params:n,query:o})},handleClick:function(t){this.turnToPage(t)},tanShow:function(t){this.settingModal=t},handleSubmit:function(e){this.$refs.accountSetting.$emit("handleSubmit",function(e){return new Promise(function(n,o){t.update(e).then(function(t){n(t.data)}).catch(function(t){o(t)})})}(e))}},computed:{menuList:function(){return this.$store.getters.menuList},userAvator:function(){return this.$store.state.user.avatorImgPath},userAccount:function(){return this.$store.state.user.userAccount},hasReadErrorPage:function(){return this.$store.state.app.hasReadErrorPage}}}});